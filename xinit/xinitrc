#!/bin/sh
# ~/.xinitrc file by luc
# vim: filetype=sh

dir=${XDG_CONFIG_HOME:-$HOME/.config}/xinit

ask_yes () {
  zenity --question --timeout 3 --text "$1"
  case $? in
    0|5) return 0;;
    1) return 1;;
    *) echo Unknown return value from zenity. >&2; return 2;;
  esac
}
ask_no () {
  zenity --question --timeout 3 --text "$1"
  case $? in
    0|5) return 1;;
    1) return 0;;
    *) echo Unknown return value from zenity. >&2; return 2;;
  esac
}

setup_pulseaudio () {
  pactl load-module module-x11-bell
}

source_global_xinit () {
  # copied from the arch linux default xinitrc file.
  if [ -d /etc/X11/xinit/xinitrc.d ]; then
    for f in /etc/X11/xinit/xinitrc.d/*; do
      [ -x "$f" ] && . "$f"
    done
    unset f
  fi
}
load_ssh_keys () {
  SSH_ASKPASS=$(which pass-as-ssh-askpass.sh) \
    ssh-add "$HOME"/.ssh/*id_rsa < /dev/null
}
autostart () {
  sleep 20 && systemctl --user start mpd-notification &
  browser &
}
load_env_to_systemd () {
  systemctl --user import-environment GNUPGHOME DISPLAY
}

# We can either go into a full WM/DE wnvironment or a kisosk mode.
full_setup () {
  load_env_to_systemd
  setup_pulseaudio
  ask_yes "Do you want a full start?" && autostart &
  sleep 60 && load_ssh_keys &
}
kiosk_setup () {
  setup_pulseaudio
}

# first call some general initialisation code that should be run for every
# environment
source_global_xinit

# select the correct programm to exec (and optionally call additional init
# functions)
if [ $# -eq 0 ]; then
  set awesome
fi
if [ $# -eq 1 ]; then
  # run some WM/DE specific init functions and set the command to exec
  case "$1" in
    awesome|xmonad|i3)
      srandrd auto-xrandr &
      auto-xrandr &
      full_setup
      ;;
    music-kiosk)
      kiosk_setup
      set cantata;;
    web-kiosk)
      kiosk_setup
      set firefox -P guest;;
  esac
fi

# start the window manager or desktop environment
exec "$@"
